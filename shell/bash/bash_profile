###########
#  ~/.bash_profile
#  The personal initialization file, executed for login shells.
###########


# --------------------------------
# INCLUDES ALIASES
# --------------------------------

# Include default bashrc file
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


# --------------------------------
# SHELL OPTIONS
# --------------------------------

# Checks the window size after each command and updates the values of LINES and COLUMNS
shopt -s checkwinsize

# Better history in terminal
shopt -s histappend
HISTCONTROL=ignoreboth
HISTFILESIZE=2000
HISTSIZE=1000

# Set shell language to english
LANG=C


# --------------------------------
# ENVIRONMENTS
# --------------------------------

# Default OS shell directories to search for executable files.
export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/git/bin:/opt/ImageMagick/bin"

# Add new directories to search for executable files.
export PATH="/usr/local/sbin:/usr/local:/opt/local/bin:/opt/local/sbin:$PATH"
export PATH="/usr/local/opt/node@8/bin:/usr/local/opt/icu4c/sbin:/usr/local/opt/icu4c/bin:$PATH"
export PATH="/usr/local/mysql/bin:$PATH"

# Ignore types of files when you tab from the command line
export FIGNORE=$FIGNORE:DS_Store

# Set default editor (change 'nano' to the editor of your choice)
export EDITOR=/usr/bin/nano


# --------------------------------
# COMPLETIONS
# --------------------------------

# Brew
if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

# Git
if [ -f ~/.gitcompletion.bash ]; then
    . ~/.gitcompletion.bash
fi


# --------------------------------
# COLORED PROMPT
# @use: http://geoff.greer.fm/lscolors/
# @use: https://github.com/mathiasbynens/dotfiles
# --------------------------------

_getGitBranch() {
    # Check if the current directory is in a Git repository.
    if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == '0' ]; then
        local branchName="$(git branch 2>/dev/null | grep '^*' | colrm 1 2 || \
            echo '(unknown)')";

        echo -e "${1}${branchName}";
    else
        return;
    fi;
}

export TERM='xterm-color'
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

COLOR_RESET=$(tput sgr0);
COLOR_BLACK="\e[1;30m";
COLOR_RED="\e[1;31m";
COLOR_GREEN="\e[1;32m";
COLOR_YELLOW="\e[1;33m";
COLOR_BLUE="\e[1;34m";
COLOR_PURPLE="\e[1;35m";
COLOR_CYAN="\e[1;36m";
COLOR_WHITE="\e[1;37m";

PS1="\n\n"; # newline
PS1+="\[${COLOR_CYAN}\][\A] "; # time short (HH:MM)
PS1+="\[${COLOR_RED}\]\u"; # username
PS1+="\[${COLOR_WHITE}\] at ";
PS1+="\[${COLOR_GREEN}\]\h"; # hostname
PS1+="\[${COLOR_WHITE}\] in ";
PS1+="\[${COLOR_YELLOW}\]\w"; # current directory full path
PS1+="\$(_getGitBranch \"\[${COLOR_WHITE}\] on \[${COLOR_PURPLE}\]\")"; # .git details
PS1+="\n"; # newline
PS1+="\[${COLOR_WHITE}\]\$ \[${COLOR_RESET}\]"; # `$` (and reset color)

export PS1;
