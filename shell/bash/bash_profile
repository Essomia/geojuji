###########
#  ~/.bash_profile
#  Personal initialization file for login shells.
###########

# INCLUDES
# --------------------------------

# Include default bashrc file
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Include aliases
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


# SHELL OPTIONS
# --------------------------------

# Checks the window size after each command and updates the values of LINES and COLUMNS
shopt -s checkwinsize

# Better history in terminal
shopt -s histappend

HISTCONTROL=ignoreboth
HISTFILESIZE=2000
HISTSIZE=1000

# Disable message `The default interactive shell is now zsh.`
export BASH_SILENCE_DEPRECATION_WARNING=1


# ENVIRONMENTS
# --------------------------------

# Shell directories to search for executable files (Default OSX).
# export PATH="/usr/local/bin:$PATH" # global
export PATH="/opt/homebrew/bin:$PATH" # homebrew

# Get personal directory for executable and add to shell directories to search for executable files.
export GEOJUJI_PATH=$(dirname $(readlink "${BASH_SOURCE[0]}"))/bin;
export PATH="$GEOJUJI_PATH:$PATH"

# Set node options
export NODE_OPTIONS='--disable-warning=ExperimentalWarning'

# Ignore types of files when you tab from the command line
export FIGNORE="$FIGNORE:DS_Store"

# Set default editor to be "nano"
export EDITOR="/usr/bin/nano"


# AUTO-COMPLETIONS
# --------------------------------

# Brew
if [[ $(command -v brew) != '' ]]; then
    if [ -f $(brew --prefix)/etc/bash_completion ]; then
        . $(brew --prefix)/etc/bash_completion
    fi
fi

# Git
if [ -f ~/.git-completion.bash ]; then
    . ~/.git-completion.bash
fi


# COLORED PROMPT
# @use: http://geoff.greer.fm/lscolors/
# @use: https://github.com/mathiasbynens/dotfiles
# --------------------------------

export TERM="xterm-color"
export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

COLOR_RESET=$(tput sgr0);
COLOR_RED="\e[1;31m";
COLOR_GREEN="\e[1;32m";
COLOR_YELLOW="\e[1;33m";
COLOR_PURPLE="\e[1;35m";
COLOR_CYAN="\e[1;36m";
COLOR_WHITE="\e[1;37m";


git_get_current_branch() {
    BIN_GIT=$(/usr/bin/which git);

    # Check if the current directory is in a Git repository.
    if [ $($BIN_GIT rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") == "0" ]; then
        local branchName="$($BIN_GIT branch 2>/dev/null | grep "^*" | colrm 1 2 || \
            echo "(unknown)")";

        echo -e "${1}${branchName}";
    else
        return;
    fi;
}

PS1="\n"; # newline
PS1+="\[${COLOR_CYAN}\][\A] "; # time short (HH:MM)
PS1+="\[${COLOR_RED}\]\u"; # username
# PS1+="\[${COLOR_WHITE}\] on ";
# PS1+="\[${COLOR_GREEN}\]\h"; # hostname
PS1+="\[${COLOR_WHITE}\] in ";
PS1+="\[${COLOR_YELLOW}\]\w"; # current directory full path
PS1+="\$(git_get_current_branch \"\[${COLOR_WHITE}\] on \[${COLOR_PURPLE}\]\")"; # .git details
PS1+="\n"; # newline
PS1+="\[${COLOR_WHITE}\]\$ \[${COLOR_RESET}\]"; # `$` (and reset color)

export PS1;
