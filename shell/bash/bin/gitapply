#!/bin/bash

source utils-ui.sh
source utils-functions.sh

###########
# GitApply
# A helper to apply a command in all git repositories.
###########

# USAGE
# --------------------------------

# Check if there is at least one argument.
if [ $# -lt 1 ]; then
    echo -e "${YELLOW_UL}Usage:${RESET}"
    echo -e "  $(basename "$0") ${GREEN}<folder> <max-depth> <git-command>${RESET}"
    echo ""
    echo -e "${YELLOW_UL}Arguments:${RESET}"
    echo -e "  ${GREEN}<folder>${RESET}      The folder to explore."
    echo -e "  ${GREEN}<max-depth>${RESET}   The max depth to explore - default 1."
    echo -e "  ${GREEN}<git-command>${RESET}  The command to apply in each git repository."
    exit 1
fi


# FUNCTIONS
# --------------------------------

function fnApply() {
    # Check if command is provided
    if [ -z "$3" ]; then
        styleError "No command provided to apply in git repositories."
        exit 1
    fi

    # actual absolute folder
    FOLDER_ROOT=$(pwd)
    # relative path to explore
    ARGS_FOLDER=${1%/}
    # max depth sub-folder to check
    ARGS_MAXDEPTH=$2
    # args command to execute
    ARGS_CMDTOEXD="${@:3}"

    echo -e "${YELLOW_UL}Exploring:${RESET} $FOLDER_ROOT/$ARGS_FOLDER"
    echo -e "${YELLOW_UL}Max Depth:${RESET} $ARGS_MAXDEPTH"
    echo -e "${YELLOW_UL}Command:${RESET} $ARGS_CMDTOEXD"

    # Loop in all git repositories found with given arguments
    find -s $ARGS_FOLDER -type d -maxdepth $ARGS_MAXDEPTH -name ".git" | while read DIR; do
        REPO_PATH="${DIR%/.git}"

        styleSubtitle "Repository: ${REPO_PATH#./}"

        cd $FOLDER_ROOT/${DIR%.git}
        eval $ARGS_CMDTOEXD
    done

    cd $FOLDER_ROOT
}


# SWITCHER
# --------------------------------

styleTitle "GitApply"

# Check if the folder exists
doFolderExist $1

# If the max-depth is not a number, set it to 1
if ! [[ $2 =~ ^[0-9]+$ ]]; then
    fnApply $1 1 "${@:2}"
else
    fnApply $1 $2 "${@:3}"
fi
