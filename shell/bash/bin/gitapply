#!/bin/bash

source util-colors.sh
source util-titles.sh

###########
# GitApply
# A helper to apply a command in all git repositories.
###########

# USAGE
# --------------------------------

# Check if there is at least one argument.
if [ $# -lt 1 ]; then
    echo -e "${YELLOW_UL}Usage:${RESET}";
    echo -e "  $(basename "$0") ${GREEN}<folder> <max-depth> <gitcommand>${RESET}";
    echo "";
    echo -e "${YELLOW_UL}Arguments:${RESET}";
    echo -e "  ${GREEN}<folder>${RESET}      The folder to explore.";
    echo -e "  ${GREEN}<max-depth>${RESET}   The max depth to explore - default 1.";
    echo -e "  ${GREEN}<gitcommand>${RESET}  The command to apply in each git repository.";
    exit 1;
fi


# FUNCTIONS
# --------------------------------

function fnApply() {
    # Check if the command is empty
    if [[ -z $3 ]]; then
        styleError "Missing command.";
        exit 1;
    fi

    # actual absolute folder
    FOLDER_ROOT=$(pwd);
    # relative path to explore
    ARGS_FOLDER=${1%/};
    # max depth sub-folder to check
    ARGS_MAXDEPTH=$2
    # args command to execute
    ARGS_CMDTOEXD="${@:3}"

    # Loop in all git repositories found with given arguments
    find -s $ARGS_FOLDER -type d -maxdepth $ARGS_MAXDEPTH -name ".git" | while read DIR; do
        cd $FOLDER_ROOT/${DIR%.git};

        styleSubtitle ${DIR%.git};

        eval $ARGS_CMDTOEXD;
    done

    cd $FOLDER_ROOT;
}


# SWITCHER
# --------------------------------

styleTitle "GitApply";

# Check if we can run git commands
if [[ -n $(/usr/bin/which git) ]]; then
    styleError "Git is not installed.";
    exit 1;
fi

# Check if the folder exists
if [[ -d $1 ]]; then
    # Check if the max-depth is a number
    if ! [[ $2 =~ ^[0-9]+$ ]]; then
        fnApply $1 1 "${@:2}";
    else
        fnApply $1 $2 "${@:3}";
    fi
else
    styleError "Folder not found.";
fi
